name: Build and Upload Release Artifacts

on:
  release:
    types: [published]

jobs:
  build-and-upload:
    name: Build for ${{ matrix.os_image }} on PG${{ matrix.pg_version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os_image:
          - "zombodb-build-ubuntu-24.04-noble"
          - "zombodb-build-ubuntu-22.04-jammy"
          - "zombodb-build-ubuntu-20.04-focal"
          - "zombodb-build-debian-12-bookworm"
          - "zombodb-build-debian-11-bullseye"
          - "zombodb-build-alpine-3.22"
          - "zombodb-build-alpine-3.21"
          - "zombodb-build-fedora-41"
          - "zombodb-build-fedora-42"
          - "zombodb-build-fedora-43"
          - "zombodb-build-amazonlinux-2"
        pg_version: [13, 14, 15, 16, 17]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build single binary artifact
        run: |
          cd docker-build-system
          cargo run --release -- ${{ github.event.release.tag_name }} ${{ matrix.os_image }} ${{ matrix.pg_version }}

      - name: Find artifact name
        id: find_artifact
        run: |
          ARTIFACT_PATH=$(find ./docker-build-system/target/zdb-build/artifacts/ -type f -name "*.deb" -o -name "*.rpm" -o -name "*.apk")
          echo "path=$ARTIFACT_PATH" >> $GITHUB_OUTPUT
          echo "name=$(basename $ARTIFACT_PATH)" >> $GITHUB_OUTPUT

      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.find_artifact.outputs.path }}
          asset_name: ${{ steps.find_artifact.outputs.name }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
